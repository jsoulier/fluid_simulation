#version 450

#include "config.hpp"

layout(local_size_x = THREADS, local_size_y = THREADS, local_size_z = 1) in;
layout(set = 0, binding = 0) uniform sampler3D inImage;
layout(set = 1, binding = 0, rgba32f) uniform writeonly image3D outImage;
layout(set = 2, binding = 0) uniform uniformType
{
    uint type;
};

void main()
{
    ivec3 size = textureSize(inImage, 0);
    ivec3 id = ivec3(gl_GlobalInvocationID);
    if (any(greaterThanEqual(id, size)))
    {
        return;
    }
    uint N = size.x;
    float value;
    if (id.z == 1)
    {
        id.z = int(N - 1);
        value = texelFetch(inImage, ivec3(id.x, id.y, N - 2), 0).x;
    }
    else
    {
        id.z = 0;
        value = texelFetch(inImage, ivec3(id.x, id.y, 1), 0).x;
    }
    imageStore(outImage, id, vec4(type == 3 ? -value : value));
}